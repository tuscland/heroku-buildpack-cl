#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# CCL distribution
CCL_PACKAGE="http://glyfis-heroku-storage.s3.amazonaws.com/software/ccl-1.9-linuxx86.tar.gz"

# parse and derive params
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd) # absolute path of buildpack
BUILD_DIR=$1
CACHE_DIR=$2

echo "-----> compile params: $BUILD_DIR $CACHE_DIR"

if [ $RESET_CACHE ]; then
  echo "-----> flushing cache"
  rm -rf $CACHE_DIR/*
fi

CCL_DIR="$CACHE_DIR"

echo "-----> Installing ccl"
if [ ! -d $CCL_DIR ]; then
    echo "-----> Fetching ccl"
    mkdir -p $CCL_DIR  && curl $CCL_PACKAGE -L -s -o -  | tar xzf - -C $CCL_DIR
fi

# add to slug 
cp -r $CCL_DIR $BUILD_DIR

echo "ccl installed" | indent

# setting up paths for building

# echo "-----> Getting patched versions of libraries"

# mkdir $CACHE_DIR/repos		# should be under an if to avoid error
# pushd $CACHE_DIR/repos

# if [ -d $CACHE_DIR/repos/portableaserve ]; then
#      echo 'aserve already present'
#      pushd portableaserve
#      git pull origin master
#      popd
# else 
#     git clone git://github.com/mtravers/portableaserve.git
# fi

# if [ -d $CACHE_DIR/repos/wuwei ]; then
#      echo 'wuwei already present'
#      pushd wuwei
#      git pull origin master
#      popd
# else 
#     git clone git://github.com/mtravers/wuwei.git
# fi

# popd

export BUILDPACK_DIR
export CACHE_DIR
export BUILD_DIR
export CCL_DEFAULT_DIRECTORY=$CCL_DIR

echo "-----> Starting build"
$CCL_DEFAULT_DIRECTORY/scripts/ccl64 -l "$BUILDPACK_DIR/setup/compile.lisp"
echo "-----> Build finished"

chmod a+x $BUILD_DIR/cl-app
